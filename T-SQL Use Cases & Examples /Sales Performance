USE GAME_ARC
GO

------------------------PRODUCT TABLE------------------------

IF OBJECT_ID ('tempdb..#LEGO') IS NOT NULL
	DROP TABLE #LEGO

SELECT *
	INTO #LEGO
	FROM DIM_PRODUCT P (NOLOCK)
	WHERE P.MANUFACTURE_CODE = 500687
		AND P.PROD_TYPE_CODE = '425'
		AND P.SUBCLASS_CODE = 'TBB'
		--AND P.LATEST = 1
		AND P.MERCHANDISE_FLG = 'YES'
GO

--SELECT * FROM #LEGO

------------------------FACT TABLE---------------------------

IF OBJECT_ID ('tempdb..#BSKT') IS NOT NULL
	DROP TABLE #BSKT

SELECT FCT.*
	INTO #BSKT
	FROM (
			SELECT * FROM FCT_SALES_LINES (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2020_Q2 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2020_Q1 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2019_Q3 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2019_Q2 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2019_Q1 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2018_Q4 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2018_Q3 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2018_Q2 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2018_Q1 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2017_Q4 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2017_Q3 (NOLOCK)
			UNION ALL
			SELECT * FROM FCT_SALES_LINES_2017_Q2 (NOLOCK)
		) FCT
		INNER JOIN #LEGO P ON P.PRODUCT_KEY = FCT.PRODUCT_KEY
		INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = FCT.DATE_KEY
	WHERE
		D.DATE_FLD >= '2018-01-01' AND D.DATE_FLD < '2024-01-01'
		AND SALE_INVC_TYPE IN ('REG-INV','DISC-SALE')
GO

------------------------BASKET TABLE--------------------------

SELECT	[Year] 'Year',
		COALESCE(Store,0)+COALESCE([Online],0) 'Total_LEGO',
		COALESCE(Store,0) 'Store',
		COALESCE([Online],0) 'Online'
FROM
(
SELECT	DATEPART(YEAR, D.DATE_FLD) 'Year',
		CASE
			WHEN F.STORE_CODE IN ('UK - 887','UK - 889') THEN 'Online'
			WHEN F.STORE_CODE NOT IN ('UK - 887','UK - 889') THEN 'Store'
		END 'Channel',
		COUNT(DISTINCT F.INVOICE_NO) 'Baskets'
	FROM #BSKT F
		INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
	GROUP BY
		DATEPART(YEAR, D.DATE_FLD),
		CASE
			WHEN F.STORE_CODE IN ('UK - 887','UK - 889') THEN 'Online'
			WHEN F.STORE_CODE NOT IN ('UK - 887','UK - 889') THEN 'Store'
		END
) x
PIVOT
	( SUM(Baskets) FOR Channel IN	(
									[Store],
									[Online]
									)
) PVT
	ORDER BY
		[Year]
GO

------------------------UNIT SALES--------------------------

SELECT	[Year] 'Year',
		COALESCE(Store,0)+COALESCE([Online],0) 'Total_LEGO',
		COALESCE(Store,0) 'Store',
		COALESCE([Online],0) 'Online'
FROM
(
SELECT	DATEPART(YEAR, D.DATE_FLD) 'Year',
		CASE
			WHEN F.STORE_CODE IN ('UK - 887','UK - 889') THEN 'Online'
			WHEN F.STORE_CODE NOT IN ('UK - 887','UK - 889') THEN 'Store'
		END 'Channel',
		SUM(F.SALE_TOT_QTY) 'Unit_Sales'
	FROM #BSKT F
		INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
	GROUP BY
		DATEPART(YEAR, D.DATE_FLD),
		CASE
			WHEN F.STORE_CODE IN ('UK - 887','UK - 889') THEN 'Online'
			WHEN F.STORE_CODE NOT IN ('UK - 887','UK - 889') THEN 'Store'
		END
) x
PIVOT
	( SUM(Unit_Sales) FOR Channel IN	(
										[Store],
										[Online]
										)
) PVT
	ORDER BY
		[Year]
GO

------------------------VALUE SALES--------------------------

SELECT	[Year] 'Year',
		COALESCE(Store,0)+COALESCE([Online],0) 'Total_LEGO',
		COALESCE(Store,0) 'Store',
		COALESCE([Online],0) 'Online'
FROM
(
SELECT	DATEPART(YEAR, D.DATE_FLD) 'Year',
		CASE
			WHEN F.STORE_CODE IN ('UK - 887','UK - 889') THEN 'Online'
			WHEN F.STORE_CODE NOT IN ('UK - 887','UK - 889') THEN 'Store'
		END 'Channel',
		SUM(F.SALE_NET_VAL+F.SALE_TOT_TAX_VAL) 'Value_Sales'
	FROM #BSKT F
		INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
	GROUP BY
		DATEPART(YEAR, D.DATE_FLD),
		CASE
			WHEN F.STORE_CODE IN ('UK - 887','UK - 889') THEN 'Online'
			WHEN F.STORE_CODE NOT IN ('UK - 887','UK - 889') THEN 'Store'
		END
) x
PIVOT
	( SUM(Value_Sales) FOR Channel IN	(
										[Store],
										[Online]
										)
) PVT
	ORDER BY
		[Year]
GO

-----------------SKU DRIVERS (VOLUME & VALUE INDEX)----------------

SELECT	DISTINCT [Year] 'Year',
		SOURCE_PRODUCT_CODE,
		PRODUCT_DESCRIPTION,
		COALESCE(Unit_Sales,0) 'Volume',
		pIDx 'Vol_pIDx'
FROM
	(
	SELECT	DISTINCT P.SOURCE_PRODUCT_CODE,
			P.PRODUCT_DESCRIPTION,
			DATEPART(YEAR, D.DATE_FLD) 'Year',
			SUM(F.SALE_TOT_QTY) 'Unit_Sales',
			ROW_NUMBER() OVER(PARTITION BY DATEPART(YEAR, D.DATE_FLD) ORDER BY SUM(F.SALE_TOT_QTY) DESC) 'pIdx'
		FROM #BSKT F
			INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
			INNER JOIN #LEGO P ON P.PRODUCT_KEY = F.PRODUCT_KEY
		GROUP BY
			P.SOURCE_PRODUCT_CODE,
			P.PRODUCT_DESCRIPTION,
			DATEPART(YEAR,D.DATE_FLD)
	) x
WHERE
	pIDX <= 3
ORDER BY
	[Year],
	pIDX
GO

SELECT	DISTINCT [Year] 'Year',
		SOURCE_PRODUCT_CODE,
		PRODUCT_DESCRIPTION,
		COALESCE(Val_Sales,0) 'Value_Sales',
		pIDx 'Val_pIDx'
FROM
	(
	SELECT	DISTINCT P.SOURCE_PRODUCT_CODE,
			P.PRODUCT_DESCRIPTION,
			DATEPART(YEAR, D.DATE_FLD) 'Year',
			SUM(F.SALE_NET_VAL+F.SALE_TOT_TAX_VAL) 'Val_Sales',
			ROW_NUMBER() OVER(PARTITION BY DATEPART(YEAR, D.DATE_FLD) ORDER BY SUM(F.SALE_NET_VAL+F.SALE_TOT_TAX_VAL) DESC) 'pIdx'
		FROM #BSKT F
			INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
			INNER JOIN #LEGO P ON P.PRODUCT_KEY = F.PRODUCT_KEY
		GROUP BY
			P.SOURCE_PRODUCT_CODE,
			P.PRODUCT_DESCRIPTION,
			DATEPART(YEAR,D.DATE_FLD)
	) x
WHERE
	pIDX <= 3
ORDER BY
	[Year],
	pIDX
GO

-------------------------------------------------------------------------------------------------
