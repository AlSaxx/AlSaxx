USE GAME_ARC
GO

IF OBJECT_ID ('tempdb..#AC6') IS NOT NULL
		DROP TABLE #AC6

SELECT *
	INTO #AC6
	FROM DIM_PRODUCT
	WHERE SOURCE_PRODUCT_CODE IN ('827401', '827409', '827405', '823874', '830467', '830461', '830464', '830470')
GO

--SELECT *FROM #AC6

IF OBJECT_ID ('tempdb..#AC6_BSKT') IS NOT NULL
	DROP TABLE #AC6_BSKT

SELECT F.*
	INTO #AC6_BSKT
		FROM FCT_SALES_LINES AS F (NOLOCK)
			INNER JOIN DIM_DATE AS D (NOLOCK) ON F.DATE_KEY = D.DATE_KEY
			INNER JOIN #AC6 AS P (NOLOCK) ON F.PRODUCT_KEY = P.PRODUCT_KEY
		WHERE
			D.DATE_FLD >= '2023-08-25' AND D.DATE_FLD < '2024-01-01'
			AND SALE_INVC_TYPE IN ('REG-INV', 'DISC-SALE')
GO

--SELECT * FROM #AC6_BSKT ORDER BY DATE_KEY

-----------------------------SALES PERFORMANCE BY DAY-------------------------------------
------------------------------------------------------------------------------------------

SELECT	tDate 'tDate',
		COALESCE([PS5 ARM CORE VI FIRES RUBICON], 0) 'PS5_Armored_Core_6',
		COALESCE([XB4 ARM CORE VI FIRES RUBICON], 0) 'Xbox_Armored_Core_6',
		COALESCE([PS4 ARM CORE VI FIRES RUBICON], 0) 'PS4_Armored_Core_6',
		COALESCE([PC ARMORED CORE VI DAY 1 ED], 0) 'PC_Armored_Core_6',
		COALESCE([XB4 ARMORED CORE VI FOR CE], 0) 'Xbox_Armored_Core_6_CE',
		COALESCE([PS5 ARMORED CORE VI FOR CE], 0) 'PS5_Armored_Core_6_CE',
		COALESCE([PS4 ARMORED CORE VI FOR CE], 0) 'PS4_Armored_Core_6_CE',
		COALESCE([PC1 ARMORED CORE VI FOR CE], 0) 'PC_Armored_Core_6_CE'
FROM
	(
	SELECT	CAST(D.DATE_FLD AS date) 'tDate',
			CASE 
				WHEN SOURCE_PRODUCT_CODE = '827401' THEN 'PS5 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827409' THEN 'XB4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827405' THEN 'PS4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '823874' THEN 'PC ARMORED CORE VI DAY 1 ED'
				WHEN SOURCE_PRODUCT_CODE = '830467' THEN 'XB4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830461' THEN 'PS5 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830464' THEN 'PS4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830470' THEN 'PC1 ARMORED CORE VI FOR CE'
			END 'Editions',
			SUM(SALE_TOT_QTY) 'Unit_Sales'
		FROM FCT_SALES_LINES F (NOLOCK)
			INNER JOIN DIM_DATE D (NOLOCK) ON F.DATE_KEY = D.DATE_KEY
			INNER JOIN #AC6 P ON F.PRODUCT_KEY = P.PRODUCT_KEY
		WHERE
			D.DATE_FLD >= '2023-08-25' AND D.DATE_FLD < '2023-09-26'
			AND SALE_INVC_TYPE IN ('REG-INV', 'DISC-SALE')
			AND MERCHANDISE_FLG = 'YES'
		GROUP BY
			D.DATE_FLD,
			CASE 
				WHEN SOURCE_PRODUCT_CODE = '827401' THEN 'PS5 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827409' THEN 'XB4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827405' THEN 'PS4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '823874' THEN 'PC ARMORED CORE VI DAY 1 ED'
				WHEN SOURCE_PRODUCT_CODE = '830467' THEN 'XB4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830461' THEN 'PS5 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830464' THEN 'PS4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830470' THEN 'PC1 ARMORED CORE VI FOR CE'
			END
	) X
PIVOT
(
	SUM(Unit_Sales)
		FOR Editions IN	(
						[PS5 ARM CORE VI FIRES RUBICON],
						[XB4 ARM CORE VI FIRES RUBICON],
						[PS4 ARM CORE VI FIRES RUBICON],
						[PC ARMORED CORE VI DAY 1 ED],
						[XB4 ARMORED CORE VI FOR CE],
						[PS5 ARMORED CORE VI FOR CE],
						[PS4 ARMORED CORE VI FOR CE],
						[PC1 ARMORED CORE VI FOR CE]
						) 
) AS PVT
ORDER BY
	tDate
GO

-----------------------------SALES PERFORMANCE BY CHANNEL---------------------------------
------------------------------------------------------------------------------------------

SELECT	tDate 'tDate',
		COALESCE([Online],0) 'Online',
		COALESCE([Stores],0) 'Stores'
FROM
(
	SELECT	CAST(D.DATE_FLD AS date) 'tDate',
			CASE
				WHEN STORE_CODE IN ('UK - 887', 'UK - 889') THEN 'Online'
				ELSE 'Stores'
			END 'Channel_Split',
			SUM(SALE_TOT_QTY) AS 'Unit_Sales'
		FROM #AC6_BSKT F (NOLOCK)
			INNER JOIN #AC6 P ON P.PRODUCT_KEY = F.PRODUCT_KEY
			INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
		WHERE
			D.DATE_FLD >= '2023-08-25' AND D.DATE_FLD < '2023-09-26'
			AND MERCHANDISE_FLG = 'YES'
		GROUP BY
			D.DATE_FLD,
			CASE
				WHEN STORE_CODE IN ('UK - 887', 'UK - 889') THEN 'Online'
				ELSE 'Stores'
			END
) X
PIVOT
	( SUM(Unit_Sales)
		FOR Channel_Split IN	(
								          [Online],
								          [Stores]
								          )
	) PVT
ORDER BY
	tDate
GO

-----------------------------SALES PERFORMANCE: REWARD SALES------------------------------
------------------------------------------------------------------------------------------

SELECT	tDate 'tDate',
		COALESCE(Reward,0) 'Loyalty_Sales',
		COALESCE(NonReward,0) 'NonLoyalty_Sales'
FROM
(
	SELECT	CAST(D.DATE_FLD AS date) AS 'tDate',
			CASE
				WHEN FS.CUSTOMER_CODE = 'UK - 99999' THEN 'NonReward'
				ELSE 'Reward'
			END AS 'Loyalty_Split',
			SUM(F.SALE_TOT_QTY) AS 'Unit_Sales'
		FROM #AC6_BSKT F (NOLOCK)
			INNER JOIN #AC6 P ON P.PRODUCT_KEY = F.PRODUCT_KEY
			INNER JOIN FCT_SALES_HEADER FS (NOLOCK) ON F.INVOICE_NO = FS.INVOICE_NO
			INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
		WHERE
			D.DATE_FLD >= '2023-08-25' AND D.DATE_FLD < '2023-09-26'
			AND MERCHANDISE_FLG = 'YES'
		GROUP BY
			D.DATE_FLD,
			CASE
				WHEN FS.CUSTOMER_CODE = 'UK - 99999' THEN 'NonReward'
				ELSE 'Reward'
			END
) X
PIVOT
(
	SUM(Unit_Sales)
	FOR Loyalty_Split IN	(
							          [NonReward],
							          [Reward]
							          )
) PVT
	ORDER BY
		tDate
GO

-----------------------------SALES PERFORMANCE BY WEEK------------------------------------
------------------------------------------------------------------------------------------

SELECT	Week_Commencing 'Wk',
		COALESCE([PS5 ARM CORE VI FIRES RUBICON], 0) 'PS5_Armored_Core_6',
		COALESCE([XB4 ARM CORE VI FIRES RUBICON], 0) 'Xbox_Armored_Core_6',
		COALESCE([PS4 ARM CORE VI FIRES RUBICON], 0) 'PS4_Armored_Core_6',
		COALESCE([PC ARMORED CORE VI DAY 1 ED], 0) 'PC_Armored_Core_6',
		COALESCE([XB4 ARMORED CORE VI FOR CE], 0) 'Xbox_Armored_Core_6_CE',
		COALESCE([PS5 ARMORED CORE VI FOR CE], 0) 'PS5_Armored_Core_6_CE',
		COALESCE([PS4 ARMORED CORE VI FOR CE], 0) 'PS4_Armored_Core_6_CE',
		COALESCE([PC1 ARMORED CORE VI FOR CE], 0) 'PC_Armored_Core_6_CE'
FROM
	(
	SELECT	D.[YEAR] 'cYr',
			D.WEEK_NUMBER_THIS_YEAR 'cWk',	
			CAST(DD.DATE_FLD as date) 'Week_Commencing',
			CASE 
				WHEN SOURCE_PRODUCT_CODE = '827401' THEN 'PS5 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827409' THEN 'XB4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827405' THEN 'PS4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '823874' THEN 'PC ARMORED CORE VI DAY 1 ED'
				WHEN SOURCE_PRODUCT_CODE = '830467' THEN 'XB4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830461' THEN 'PS5 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830464' THEN 'PS4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830470' THEN 'PC1 ARMORED CORE VI FOR CE'
			END 'Editions',
			SUM(SALE_TOT_QTY) AS 'Unit_Sales'
		FROM FCT_SALES_LINES F (NOLOCK)
			INNER JOIN #AC6 P ON F.PRODUCT_KEY = P.PRODUCT_KEY
			INNER JOIN DIM_DATE D (NOLOCK) ON F.DATE_KEY = D.DATE_KEY
			INNER JOIN DIM_DATE DD (NOLOCK) ON D.WEEK_ST_DATE_KEY = DD.DATE_KEY
		WHERE
			D.DATE_FLD >= '2023-08-25' AND D.DATE_FLD < CAST(GETDATE() As date)
			AND SALE_INVC_TYPE IN ('REG-INV', 'DISC-SALE')
			AND MERCHANDISE_FLG = 'YES'
		GROUP BY
			D.[YEAR],
			D.WEEK_NUMBER_THIS_YEAR,
			DD.DATE_FLD,
			CASE 
				WHEN SOURCE_PRODUCT_CODE = '827401' THEN 'PS5 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827409' THEN 'XB4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '827405' THEN 'PS4 ARM CORE VI FIRES RUBICON'
				WHEN SOURCE_PRODUCT_CODE = '823874' THEN 'PC ARMORED CORE VI DAY 1 ED'
				WHEN SOURCE_PRODUCT_CODE = '830467' THEN 'XB4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830461' THEN 'PS5 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830464' THEN 'PS4 ARMORED CORE VI FOR CE'
				WHEN SOURCE_PRODUCT_CODE = '830470' THEN 'PC1 ARMORED CORE VI FOR CE'
			END
	) X
PIVOT
(
	SUM(Unit_Sales)
	FOR Editions IN	(
						[PS5 ARM CORE VI FIRES RUBICON],
						[XB4 ARM CORE VI FIRES RUBICON],
						[PS4 ARM CORE VI FIRES RUBICON],
						[PC ARMORED CORE VI DAY 1 ED],
						[XB4 ARMORED CORE VI FOR CE],
						[PS5 ARMORED CORE VI FOR CE],
						[PS4 ARMORED CORE VI FOR CE],
						[PC1 ARMORED CORE VI FOR CE]
					) 
) PVT
ORDER BY
	cYr,
	cWk,
	Week_Commencing
GO

-----------------------------SALES PERFORMANCE BY CHANNEL (Wk)----------------------------
------------------------------------------------------------------------------------------

SELECT	Week_Commencing 'Wk',
		COALESCE([Online],0) 'Online',
		COALESCE([Stores],0) 'Stores'
FROM
(
	SELECT	D.[YEAR] 'cYr',
			D.WEEK_NUMBER_THIS_YEAR 'cWk',	
			CAST(DD.DATE_FLD as date) 'Week_Commencing',
			CASE
				WHEN STORE_CODE IN ('UK - 887', 'UK - 889') THEN 'Online'
				ELSE 'Stores'
			END 'Channel_Split',
			SUM(SALE_TOT_QTY) AS 'Unit_Sales'
		FROM #AC6_BSKT F (NOLOCK)
			INNER JOIN #AC6 P ON P.PRODUCT_KEY = F.PRODUCT_KEY
			INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
			INNER JOIN DIM_DATE DD (NOLOCK) ON D.WEEK_ST_DATE_KEY = DD.DATE_KEY
		WHERE
			MERCHANDISE_FLG = 'YES'
		GROUP BY
			D.[YEAR],
			D.WEEK_NUMBER_THIS_YEAR,
			DD.DATE_FLD,
			CASE
				WHEN STORE_CODE IN ('UK - 887', 'UK - 889') THEN 'Online'
				ELSE 'Stores'
			END
) X
PIVOT
	( SUM(Unit_Sales)
		FOR Channel_Split IN	(
								          [Online],
								          [Stores]
								          )
	) PVT
ORDER BY
	cYr,
	cWk,
	Week_Commencing
GO

-----------------------------SALES PERFORMANCE: REWARD SALES------------------------------
------------------------------------------------------------------------------------------

SELECT	Week_Commencing 'Wk',
		COALESCE(Loyalty,0)'Loyalty_Sales',
		COALESCE(NonLoyalty,0) 'NonLoyalty_Sales'
FROM
(
	SELECT	D.[YEAR] 'cYr',
			D.WEEK_NUMBER_THIS_YEAR 'cWk',	
			CAST(DD.DATE_FLD as date) 'Week_Commencing',
			CASE
				WHEN FS.CUSTOMER_CODE = 'UK - 99999' THEN 'NonLoyalty'
				ELSE 'Loyalty'
			END 'Loyalty_Split',
			SUM(F.SALE_TOT_QTY) 'Unit_Sales'
		FROM #AC6_BSKT F (NOLOCK)
			INNER JOIN #AC6 P ON P.PRODUCT_KEY = F.PRODUCT_KEY
			INNER JOIN FCT_SALES_HEADER FS (NOLOCK) ON F.INVOICE_NO = FS.INVOICE_NO
			INNER JOIN DIM_DATE D (NOLOCK) ON D.DATE_KEY = F.DATE_KEY
			INNER JOIN DIM_DATE DD (NOLOCK) ON D.WEEK_ST_DATE_KEY = DD.DATE_KEY
		WHERE
			D.DATE_FLD >= '2023-08-25' AND D.DATE_FLD < CAST(GETDATE() As date)
			AND MERCHANDISE_FLG = 'YES'
		GROUP BY
			D.[YEAR],
			D.WEEK_NUMBER_THIS_YEAR,
			DD.DATE_FLD,
			CASE
				WHEN FS.CUSTOMER_CODE = 'UK - 99999' THEN 'NonLoyalty'
				ELSE 'Loyalty'
			END
) X
PIVOT
(
	SUM(Unit_Sales)
	FOR Loyalty_Split IN	(
							[NonLoyalty],
							[Loyalty]
							)
) AS PVT
	ORDER BY
		tDate
GO

-----------------------------------BASKETS------------------------------------------------
------------------------------------------------------------------------------------------

SELECT COUNT (DISTINCT B.INVOICE_NO) 'BSKTs'
	FROM #AC6_BSKT B
GO

SELECT COUNT (DISTINCT F.INVOICE_NO) 'Attach_BSKTs'
	FROM FCT_SALES_LINES  F (NOLOCK)
		INNER JOIN #AC6_BSKT B ON B.INVOICE_NO = F.INVOICE_NO
		INNER JOIN DIM_PRODUCT P (NOLOCK) ON P.PRODUCT_KEY = F.PRODUCT_KEY
	WHERE
		SOURCE_PRODUCT_CODE NOT IN (SELECT SOURCE_PRODUCT_CODE FROM #AC6)
		AND F.SALE_INVC_TYPE IN ('REG-INV', 'DISC-SALE')
		AND CLASS_CODE IN ('H', 'A', 'S')
		AND MERCHANDISE_FLG = 'YES'
GO

SELECT TOP 20 P.PRODUCT_CODE, P.PRODUCT_DESCRIPTION, SUM(F.SALE_TOT_QTY) AS 'Units'
	FROM FCT_SALES_LINES AS F (NOLOCK)
		INNER JOIN #AC6_BSKT AS B ON B.INVOICE_NO = F.INVOICE_NO
		INNER JOIN DIM_PRODUCT AS P (NOLOCK) ON P.PRODUCT_KEY = F.PRODUCT_KEY
	WHERE
		SOURCE_PRODUCT_CODE NOT IN (SELECT SOURCE_PRODUCT_CODE FROM #AC6)
		AND F.SALE_INVC_TYPE IN ('REG-INV', 'DISC-SALE')
		AND CLASS_CODE IN ('H', 'A', 'S')
		AND MERCHANDISE_FLG = 'YES'
	GROUP BY
		P.PRODUCT_CODE,
		P.PRODUCT_DESCRIPTION
	ORDER BY
		Units DESC
GO

SELECT	DISTINCT																				-- Tender Type of Basket Count
		CASE 
			WHEN T.TENDER_CODE IN ('FG','WG')THEN 'GiftCard'
			WHEN T.TENDER_CODE = 'CN' THEN 'F+'
			ELSE T.TENDER_NAME
		END [TenderType],
		COUNT (DISTINCT F.INVOICE_NO) 'Baskets_Store'
	FROM #AC6_BSKT F (NOLOCK)
		INNER JOIN FCT_SALES_INVOICE_TENDER AS IT (NOLOCK) ON IT.INVOICE_NO  = F.INVOICE_NO
		INNER JOIN DIM_TENDER T (NOLOCK) ON T.TENDER_KEY = IT.TENDER_KEY
		INNER JOIN #AC6 P (NOLOCK) ON P.PRODUCT_KEY = F.PRODUCT_KEY
	WHERE F.STORE_CODE NOT IN ('UK - 887', 'UK - 889')
		AND SALE_INVC_TYPE IN ('REG-INV', 'DISC-SALE')
	GROUP BY
		CASE 
			WHEN T.TENDER_CODE IN ('FG','WG')THEN 'GiftCard'
			WHEN T.TENDER_CODE = 'CN' THEN 'F+'
			ELSE T.TENDER_NAME
		END
	ORDER BY
		Baskets_Store DESC
GO

SELECT COUNT(DISTINCT F.INVOICE_NO) AS 'Ti_BSKTs'
	FROM FCT_SALES_LINES AS F (NOLOCK)
		INNER JOIN #AC6_BSKT B ON B.INVOICE_NO = F.INVOICE_NO
	WHERE
		F.SALE_INVC_TYPE = 'TRADE-IN'
GO

SELECT TOP 20 P.PRODUCT_CODE, P.PRODUCT_DESCRIPTION, CAST(-SUM(F.SALE_TOT_QTY) AS smallint) AS 'TiQty'
	FROM FCT_SALES_LINES  F (NOLOCK)
		INNER JOIN #AC6_BSKT B ON B.INVOICE_NO = F.INVOICE_NO
		INNER JOIN DIM_PRODUCT P (NOLOCK) ON F.PRODUCT_KEY = P.PRODUCT_KEY
	WHERE
		F.SALE_INVC_TYPE = 'TRADE-IN'
	GROUP BY
		P.PRODUCT_CODE,
		P.PRODUCT_DESCRIPTION
	ORDER BY
		'TIQty' DESC
GO
